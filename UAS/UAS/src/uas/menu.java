/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uas;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;




/**
 *
 * @author ASUS
 */
public class menu extends javax.swing.JFrame {
Statement stmt;
     Connection con;
     String url = "jdbc:mysql://localhost:3306/hungrybits";
    /**
     * Creates new form menu
     */
    public menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        store = new javax.swing.JComboBox<>();
        beverageOrder = new javax.swing.JComboBox<>();
        foodOrder = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        order = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        store.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        store.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "Jakarta", "Bogor", "Depok", "Bekasi" }));
        getContentPane().add(store, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 900, -1, -1));

        beverageOrder.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        beverageOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "Ice Lemon Tea", "Coke", "Mineral Water", "Sprite" }));
        getContentPane().add(beverageOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 720, -1, -1));

        foodOrder.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        foodOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "Nasi Goreng", "Mie Goreng", "Ayam Geprek", "Se'i Sapi" }));
        foodOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodOrderActionPerformed(evt);
            }
        });
        getContentPane().add(foodOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 720, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\ASUS\\Downloads\\menu (1).png")); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 1440, -1));

        order.setText("jButton1");
        order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderActionPerformed(evt);
            }
        });
        getContentPane().add(order, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 860, 120, 110));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void foodOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodOrderActionPerformed

    private void orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderActionPerformed
        // TODO add your handling code here:
    Object food = foodOrder.getSelectedItem();
    Object beverage = beverageOrder.getSelectedItem();
    Object Store = store.getSelectedItem();

    
    int foodCode = 0;
    int beverageCode = 0;
    int storeId = 0;
    int price1 = 0;
    int price2 = 0;
    int orderid = 0;
            

     try {
        con = DriverManager.getConnection(url, "root", "");

        // Query untuk makanan
        String queryMakanan = "SELECT food_code, price FROM food WHERE food_name = ?";
        PreparedStatement preparedStatementMakanan = con.prepareStatement(queryMakanan);
        preparedStatementMakanan.setString(1, food.toString());

        ResultSet resultSetMakanan = preparedStatementMakanan.executeQuery();

        if (resultSetMakanan.next()) {
            foodCode = resultSetMakanan.getInt("food_code");
            price1 = resultSetMakanan.getInt("price");
        } 

        // Query untuk minuman
        String queryMinuman = "SELECT beverage_code, price FROM beverage WHERE beverage_name = ?";
        PreparedStatement preparedStatementMinuman = con.prepareStatement(queryMinuman);
        preparedStatementMinuman.setString(1, beverage.toString());

        ResultSet resultSetMinuman = preparedStatementMinuman.executeQuery();

        if (resultSetMinuman.next()) {
            beverageCode = resultSetMinuman.getInt("beverage_code");
            price2 = resultSetMinuman.getInt("price");
        } 
        
         // Query untuk minuman
        String queryStore = "SELECT store_id FROM store WHERE store_name = ?";
        PreparedStatement preparedStatementStore = con.prepareStatement(queryStore);
        preparedStatementStore.setString(1, Store.toString());

        ResultSet resultSetStore = preparedStatementStore.executeQuery();

        if (resultSetStore.next()) {
            storeId = resultSetStore.getInt("store_id");
        } 
        
    } catch (SQLException ex) {
        System.err.println("SQLException: " + ex.getMessage());
    }

    try {
        con = DriverManager.getConnection(url, "root", "");
        stmt = con.createStatement();

        // Mendapatkan total price
        int totalPrice = price1 + price2;

        // Menyimpan data ke dalam tabel order_detail
        // Hapus pengaturan eksplisit untuk order_id
String sql = "INSERT INTO order_detail (food_code, beverage_code, store_id, total_price) VALUES (?, ?, ?, ?)";
try (PreparedStatement preparedStatement = con.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {
    preparedStatement.setInt(1, foodCode);
    preparedStatement.setInt(2, beverageCode);
    preparedStatement.setInt(3, storeId);
    preparedStatement.setInt(4, totalPrice);

    int affectedRows = preparedStatement.executeUpdate();

    if (affectedRows > 0) {
        // Dapatkan order_id yang dihasilkan secara otomatis
        try (ResultSet generatedKeys = preparedStatement.getGeneratedKeys()) {
            if (generatedKeys.next()) {
                int generatedOrderId = generatedKeys.getInt(1);
                JOptionPane.showMessageDialog(null, "Detail Pesanan berhasil dimasukkan.");
                cart gui = new cart();
                gui.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Gagal mengambil Order ID.");
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Gagal memasukkan Detail Pesanan.");
    }
}
    } catch (SQLException ex) {
        System.err.println("SQLException: " + ex.getMessage());
    }
    
    
            
            
    }//GEN-LAST:event_orderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> beverageOrder;
    private javax.swing.JComboBox<String> foodOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton order;
    private javax.swing.JComboBox<String> store;
    // End of variables declaration//GEN-END:variables
}
